#!/usr/bin/env python
import re
import sys
from exploits.includes.termcolor import colored
from exploits.includes.prettytable import PrettyTable

exploitdb = [
	['Yet Another Awards System 4.0.2', 'SQLi', '/exploits/yaas'],
	['ibProArcade <= 3.3.0', 'SQLi', '/exploits/ibproarcade'],
	['vBGarage Pro', 'SQLi', '/exploits/vbgarage'],
	['vBay', 'SQLi', '/exploits/vbay'],
	['vBulletin 5 Beta', 'SQLi', '/exploits/vb5'],
	['vBulletin 4.0.x => 4.1.2', 'SQLi', '/exploits/vbgroup'],
	['vBSEO <= 3.6.0', 'PHP Code Injection', 'exploits/vbseo'],
	['vBulletin Upgrade', 'Privilage Escalation', 'exploits/vbupgrade']
]

def search(string):
	found = 0
	searchtable = PrettyTable()
	searchtable.field_names = ["Vulnerable Version Or Plugin", "Type Of Exploit", "Command"]
	for results in exploitdb:
		express = re.search(string, results[0], re.IGNORECASE)
		if express:
			found += 1
			searchtable.add_row([results[0], results[1], colored('use '+results[2], 'red')])

	if found == 0:
		print ('No exploits found!')
	else:
		print ('Found '+str(found)+' exploits that match "'+string+'".')
		searchtable.align["Vulnerable Version Or Plugin"] = "l"
		searchtable.align["Command"] = "l"
		print(searchtable)

def count():
	print (str(len(exploitdb))+' exploits found!')
	print ('Type help for more information')

def showall():
	alltable = PrettyTable()
	alltable.field_names = ["Vulnerable Version Or Plugin", "Type Of Exploit", "Command"]
	for allsploits in exploitdb:
		alltable.add_row([allsploits[0], allsploits[1], colored('use '+allsploits[2], 'red')])
	alltable.align["Vulnerable Version Or Plugin"] = "l"
	alltable.align["Command"] = "l"
	print (alltable)
