#!/usr/bin/env python
from termcolor import colored


def initiate():
	# Variables needed to run exploit
	# First value is the name of the var
	# Second value is the default value
	# Third value is a description of the variable
	# You can access the values by using exvars[0][1]
	# i.e. exvars[0][1] = Not Set exvars[1][1] = /forums
	exvars = [
	['HOST', 'Not Set', 'Host of target with http://!'],
	['PATH', '/forums', 'Path to forums on target host'],
	['TABLE', 'user', 'User table to extract data from'],
	['USERID', '1', 'Userid of to extract data for'],
	['COLUMNS', 'password,salt', 'Columns to extract data for. Seperate with a comma!!'],
	['SEPERATOR', ':', 'Seperator to seperate columns']
	]
	
	# Print any important notes to the user before the command line starts
	print ('[+] Important note!')
	print ('The query results are limited to 65 characters!')
	print ('Be careful when trying to extract larger amounts of data.')
	print ('Anything after the 65th character will be cut off!')
	print ('I would suggest extracting just the password and salt at first.')
	print ('Then going back and extracting anything else you may need.')
	print ('\nType help for more information')
	while True:
		try:
			# Change first value of colored to /exploits/{NAME OF FILE} (Without .py)
			cliinput = raw_input('vbconsole('+colored('/exploits/vbgarage', 'red')+')> ')
			# Don't edit
			if cliinput == 'exit':
				print ("Going back to home.")
				break
			# Edit if needed
			elif cliinput == 'help':
				print ('show vars ~> Shows variables needed to run exploit and their current values')
				print ('set {VAR NAME} {VAR VALUE} ~> Set {VAR NAME} to {VAR VALUE}')
				print ('run ~> Run the exploit')
				print ('exit ~> Go back to vBconsole home')
			# Don't edit
			elif cliinput == 'show vars':
				print ("Variables needed to run exploit.\n")
				count = 0
				while count < len(exvars):
					print (exvars[count][0]+" = "+exvars[count][1]+" ("+exvars[count][2]+")")
					count += 1
			# Don't edit
			elif cliinput[0:3] == 'set':
				setvar = cliinput.split(' ')[1]
				setval = cliinput.split(' ')[2:]
				count = 0
				while count < len(exvars):
					if exvars[count][0] == setvar:
						exvars[count][1] = " ".join(setval)
					count += 1
			# Add your exploit code here
			elif cliinput == 'run':
				# Your exploit code here
		except KeyboardInterrupt:
			print ("\nGoing back to home.")
			break
